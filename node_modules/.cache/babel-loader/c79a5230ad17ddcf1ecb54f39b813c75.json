{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/alisonfindlay/Documents/wellfield/src/components/Shared/MailingList/MailingList.jsx\",\n    _s = $RefreshSig$();\n\nimport './MailingList.css';\nimport wfld from \"../../../images/logos/wfld.svg\";\nimport gear from \"../../../images/logos/gear.svg\";\nimport { useEffect, useState } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nfunction MailingList() {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [isSent, setIsSent] = useState(false);\n\n  handleSubmit = e => {\n    let emailErrorMsg = '';\n\n    if (email === '') {\n      emailErrorMsg = 'Email required';\n    } else if (!email.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)) {\n      emailErrorMsg = 'Please enter a valid email';\n    }\n\n    setEmailError(emailErrorMsg);\n\n    if (emailErrorMsg === '') {\n      fetch(\"/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        },\n        body: encode({\n          \"form-name\": \"contactUs\",\n          ...this.state\n        })\n      }).then(() => setIsSent(true)).catch(error => alert(error));\n    } // this.submitBtn.current.blur();\n\n\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mailing__bg\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: wfld\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"mailing__heading heading2\",\n            children: \"Get investor updates.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            autoComplete: \"off\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"hidden\",\n              name: \"form-name\",\n              value: \"contactUs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: `form__input-text ${this.state.formErrors.email ? 'form__error-input' : ''}`,\n              type: \"email\",\n              name: \"email\",\n              value: email,\n              onChange: this.handleChange,\n              onFocus: this.handleFocus,\n              onBlur: this.handleBlur,\n              ref: this.emailInput,\n              autoComplete: \"random\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), emailErrorMsg ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"form__error-msg\",\n              children: this.state.formErrors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 33\n            }, this) : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button-lg mailing__button\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: gear\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MailingList, \"dA4aed5JpCbEqvjIEFdeGoJaT4U=\");\n\n_c = MailingList;\nexport default MailingList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MailingList\");","map":{"version":3,"sources":["/Users/alisonfindlay/Documents/wellfield/src/components/Shared/MailingList/MailingList.jsx"],"names":["useEffect","useState","Container","Row","Col","MailingList","email","setEmail","emailError","setEmailError","isSent","setIsSent","handleSubmit","e","emailErrorMsg","match","fetch","method","headers","body","encode","state","then","catch","error","alert","preventDefault","wfld","formErrors","handleChange","handleFocus","handleBlur","emailInput","gear"],"mappings":"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","sourcesContent":["import './MailingList.css';\nimport wfld from '../../../images/logos/wfld.svg';\nimport gear from '../../../images/logos/gear.svg';\n\nimport { useEffect, useState } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\n\n\nfunction MailingList() {\n  const [email, setEmail] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [isSent, setIsSent] = useState(false);\n\n  handleSubmit = e => {\n\n    let emailErrorMsg = '';\n    if (email === '') {\n      emailErrorMsg = 'Email required';\n    } else if (!email.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)) {\n      emailErrorMsg = 'Please enter a valid email';\n    }\n\n    setEmailError(emailErrorMsg);\n\n    if (emailErrorMsg === '') {\n      fetch(\"/\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n        body: encode({ \"form-name\": \"contactUs\", ...this.state })\n      })\n        .then(() => setIsSent(true))\n        .catch(error => alert(error));\n    }\n\n    // this.submitBtn.current.blur();\n    e.preventDefault();\n  };\n\n  return (\n    <div className=\"mailing__bg\">\n      <Container>\n        <Row>\n          <Col xs={12} className=\"text-center\">\n            <img src={wfld} />\n            <h2 className=\"mailing__heading heading2\">Get investor updates.</h2>\n\n            <form onSubmit={handleSubmit} autoComplete=\"off\">\n              <input type=\"hidden\" name=\"form-name\" value=\"contactUs\" />\n              <input\n                className={`form__input-text ${this.state.formErrors.email ? 'form__error-input' : ''}`}\n                type=\"email\"\n                name=\"email\"\n                value={email}\n                onChange={this.handleChange}\n                onFocus={this.handleFocus}\n                onBlur={this.handleBlur}\n                ref={this.emailInput}\n                autoComplete=\"random\"\n              />\n              {\n                emailErrorMsg ? <p className=\"form__error-msg\">{this.state.formErrors.email}</p> : ''\n              }\n            </form>\n            <button className=\"button-lg mailing__button\">Submit</button>\n            <img src={gear} />\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default MailingList;\n"]},"metadata":{},"sourceType":"module"}