{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/alisonfindlay/Documents/wellfield/src/components/Shared/MailingList/MailingList.jsx\",\n    _s = $RefreshSig$();\n\nimport './MailingList.css';\nimport wfld from \"../../../images/logos/wfld.svg\";\nimport gear from \"../../../images/images/gear.svg\";\nimport { useRef, useState, useEffect } from 'react';\nimport { useLocation } from \"react-router-dom\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nconst type = {\n  '/': 'gray',\n  '/seamless': 'black',\n  '/moneyclip': 'white'\n};\n\nconst encode = data => {\n  return Object.keys(data).map(key => encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key])).join(\"&\");\n};\n\nfunction MailingList() {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [isSent, setIsSent] = useState(false);\n  const buttonRef = useRef();\n  const {\n    pathname\n  } = useLocation();\n\n  const handleSubmit = e => {\n    let errorMsg = '';\n\n    if (email === '') {\n      errorMsg = 'Email required';\n    } else if (!email.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)) {\n      errorMsg = 'Please enter a valid email';\n    }\n\n    setEmailError(errorMsg);\n\n    if (errorMsg === '') {\n      fetch(\"/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        },\n        body: encode({\n          \"form-name\": \"mailing-list\",\n          email\n        })\n      }).then(() => setIsSent(true)).catch(error => alert(error));\n    }\n\n    buttonRef.current.blur();\n    e.preventDefault();\n  };\n\n  useEffect(() => {\n    console.log(Object.values(type));\n  }, [pathname]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mailing__bg\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: wfld,\n            alt: \"Wellfield logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"mailing__heading heading2\",\n            children: \"Get investor updates.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            autoComplete: \"off\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"hidden\",\n              name: \"form-name\",\n              value: \"mailing-list\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mailing__form\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: \"100%\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  style: {\n                    width: \"100%\"\n                  },\n                  type: \"email\",\n                  name: \"email\",\n                  value: email,\n                  placeholder: \"Enter your email\",\n                  onChange: e => setEmail(e.target.value),\n                  autoComplete: \"random\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 19\n                }, this), emailError ? /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"form__error-msg\",\n                  children: emailError\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 33\n                }, this) : '']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  ref: buttonRef,\n                  className: \"button-lg mailing__button\",\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MailingList, \"kGUKuYwYU1juRhfsM3uC0pgdmkI=\", false, function () {\n  return [useLocation];\n});\n\n_c = MailingList;\nexport default MailingList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MailingList\");","map":{"version":3,"sources":["/Users/alisonfindlay/Documents/wellfield/src/components/Shared/MailingList/MailingList.jsx"],"names":["useRef","useState","useEffect","useLocation","Container","Row","Col","type","encode","data","Object","keys","map","key","encodeURIComponent","join","MailingList","email","setEmail","emailError","setEmailError","isSent","setIsSent","buttonRef","pathname","handleSubmit","e","errorMsg","match","fetch","method","headers","body","then","catch","error","alert","current","blur","preventDefault","console","log","values","wfld","width","target","value"],"mappings":"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","sourcesContent":["import './MailingList.css';\nimport wfld from '../../../images/logos/wfld.svg';\nimport gear from '../../../images/images/gear.svg';\n\nimport { useRef, useState, useEffect } from 'react';\nimport { useLocation } from \"react-router-dom\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nconst type = {\n  '/': 'gray',\n  '/seamless': 'black',\n  '/moneyclip': 'white',\n}\n\nconst encode = (data) => {\n  return Object.keys(data)\n    .map(key => encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]))\n    .join(\"&\");\n}\n\nfunction MailingList() {\n  const [email, setEmail] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [isSent, setIsSent] = useState(false);\n  const buttonRef = useRef();\n  const { pathname } = useLocation();\n\n  const handleSubmit = e => {\n    let errorMsg = '';\n    if (email === '') {\n      errorMsg = 'Email required';\n    } else if (!email.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)) {\n      errorMsg = 'Please enter a valid email';\n    }\n\n    setEmailError(errorMsg);\n\n    if (errorMsg === '') {\n      fetch(\"/\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n        body: encode({ \"form-name\": \"mailing-list\", email })\n      })\n        .then(() => setIsSent(true))\n        .catch(error => alert(error));\n    }\n\n    buttonRef.current.blur();\n    e.preventDefault();\n  };\n\n  useEffect(() => {\n    console.log(Object.values(type))\n  }, [pathname]);\n\n  return (\n    <div className=\"mailing__bg\">\n      <Container>\n        <Row>\n          <Col xs={12} className=\"text-center\">\n            <img src={wfld} alt=\"Wellfield logo\" />\n            <h2 className=\"mailing__heading heading2\">Get investor updates.</h2>\n\n            <form onSubmit={handleSubmit} autoComplete=\"off\">\n              <input type=\"hidden\" name=\"form-name\" value=\"mailing-list\" />\n\n              <div className=\"mailing__form\">\n                <div style={{ width: \"100%\" }}>\n                  <input\n                    style={{ width: \"100%\" }}\n                    type=\"email\"\n                    name=\"email\"\n                    value={email}\n                    placeholder=\"Enter your email\"\n                    onChange={(e) => setEmail(e.target.value)}\n                    autoComplete=\"random\"\n                  />\n                  {emailError ? <p className=\"form__error-msg\">{emailError}</p> : ''}\n                </div>\n\n                <div>\n                  <button type=\"submit\" ref={buttonRef} className=\"button-lg mailing__button\">Submit</button>\n                </div>\n\n              </div>\n            </form>\n          </Col>\n        </Row>\n      </Container>\n\n      {/* <div className=\"mailing__image-wrapper d-none d-lg-block\">\n        <img src={gear} alt=\"Gear\" />\n      </div> */}\n    </div>\n  );\n}\n\nexport default MailingList;\n"]},"metadata":{},"sourceType":"module"}