{"ast":null,"code":"require('dotenv').config();\n\nconst client = require('contentful').createClient({\n  space: process.env.REACT_APP_CONTENTFUL_SPACE,\n  accessToken: process.env.REACT_APP_ACCESS_TOKEN\n});\n\nconst getCertifications = () => client.getEntries({\n  select: 'fields',\n  content_type: 'certifications',\n  order: 'fields.order'\n}).then(response => response.items.map(item => item.fields));\n\nconst getFaqs = () => client.getEntries({\n  select: 'fields',\n  content_type: 'faq',\n  order: 'fields.order'\n}).then(response => response.items.map(item => item.fields));\n\nconst getPost = order => client.getEntries({\n  select: 'fields',\n  content_type: 'press',\n  'fields.order': order\n}).then(response => response.items.map(item => item.fields));\n\nconst getPosts = (skip, limit) => client.getEntries({\n  select: 'fields',\n  content_type: 'press',\n  order: 'fields.order',\n  limit: limit,\n  skip: skip\n}).then(response => {\n  return {\n    data: response.items.map(item => item.fields),\n    count: response.total\n  };\n});\n\nconst getProducts = () => client.getEntries({\n  select: 'fields',\n  content_type: 'products',\n  order: 'fields.order'\n}).then(response => response.items.map(item => item.fields));\n\nconst getTestimonies = () => client.getEntries({\n  select: 'fields',\n  content_type: 'testimonial',\n  order: 'fields.order'\n}).then(response => response.items.map(item => item.fields));\n\nconst getMetrics = () => client.getEntry('12NMVRO3AuSzUO6fBLC8mq', {\n  select: 'fields'\n}).then(response => response.fields);\n\nconst getConfig = () => client.getEntry('3uhsSThJqBMSCiTPf24Fra', {\n  select: 'fields'\n}).then(response => response.fields);\n\nexport { getCertifications, getFaqs, getPost, getPosts, getProducts, getTestimonies, getMetrics, getConfig };","map":{"version":3,"sources":["/Users/alisonfindlay/Documents/wellfield/src/contentful.js"],"names":["require","config","client","createClient","space","process","env","REACT_APP_CONTENTFUL_SPACE","accessToken","REACT_APP_ACCESS_TOKEN","getCertifications","getEntries","select","content_type","order","then","response","items","map","item","fields","getFaqs","getPost","getPosts","skip","limit","data","count","total","getProducts","getTestimonies","getMetrics","getEntry","getConfig"],"mappings":"AAEAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEA,MAAMC,MAAM,GAAGF,OAAO,CAAC,YAAD,CAAP,CAAsBG,YAAtB,CAAmC;AAChDC,EAAAA,KAAK,EAAEC,OAAO,CAACC,GAAR,CAAYC,0BAD6B;AAEhDC,EAAAA,WAAW,EAAEH,OAAO,CAACC,GAAR,CAAYG;AAFuB,CAAnC,CAAf;;AAOA,MAAMC,iBAAiB,GAAG,MACxBR,MAAM,CACHS,UADH,CACc;AACVC,EAAAA,MAAM,EAAE,QADE;AAEVC,EAAAA,YAAY,EAAE,gBAFJ;AAGVC,EAAAA,KAAK,EAAE;AAHG,CADd,EAMGC,IANH,CAMQC,QAAQ,IAAIA,QAAQ,CAACC,KAAT,CAAeC,GAAf,CAAmBC,IAAI,IAAIA,IAAI,CAACC,MAAhC,CANpB,CADF;;AASA,MAAMC,OAAO,GAAG,MACdnB,MAAM,CACHS,UADH,CACc;AACVC,EAAAA,MAAM,EAAE,QADE;AAEVC,EAAAA,YAAY,EAAE,KAFJ;AAGVC,EAAAA,KAAK,EAAE;AAHG,CADd,EAMGC,IANH,CAMQC,QAAQ,IAAIA,QAAQ,CAACC,KAAT,CAAeC,GAAf,CAAmBC,IAAI,IAAIA,IAAI,CAACC,MAAhC,CANpB,CADF;;AASA,MAAME,OAAO,GAAIR,KAAD,IACdZ,MAAM,CACHS,UADH,CACc;AACVC,EAAAA,MAAM,EAAE,QADE;AAEVC,EAAAA,YAAY,EAAE,OAFJ;AAGV,kBAAgBC;AAHN,CADd,EAMGC,IANH,CAMQC,QAAQ,IAAIA,QAAQ,CAACC,KAAT,CAAeC,GAAf,CAAmBC,IAAI,IAAIA,IAAI,CAACC,MAAhC,CANpB,CADF;;AASA,MAAMG,QAAQ,GAAG,CAACC,IAAD,EAAOC,KAAP,KACfvB,MAAM,CACHS,UADH,CACc;AACVC,EAAAA,MAAM,EAAE,QADE;AAEVC,EAAAA,YAAY,EAAE,OAFJ;AAGVC,EAAAA,KAAK,EAAE,cAHG;AAIVW,EAAAA,KAAK,EAAEA,KAJG;AAKVD,EAAAA,IAAI,EAAEA;AALI,CADd,EAQGT,IARH,CAQQC,QAAQ,IAAI;AAChB,SAAO;AACLU,IAAAA,IAAI,EAAEV,QAAQ,CAACC,KAAT,CAAeC,GAAf,CAAmBC,IAAI,IAAIA,IAAI,CAACC,MAAhC,CADD;AAELO,IAAAA,KAAK,EAAEX,QAAQ,CAACY;AAFX,GAAP;AAID,CAbH,CADF;;AAgBA,MAAMC,WAAW,GAAG,MAClB3B,MAAM,CACHS,UADH,CACc;AACVC,EAAAA,MAAM,EAAE,QADE;AAEVC,EAAAA,YAAY,EAAE,UAFJ;AAGVC,EAAAA,KAAK,EAAE;AAHG,CADd,EAMGC,IANH,CAMQC,QAAQ,IAAIA,QAAQ,CAACC,KAAT,CAAeC,GAAf,CAAmBC,IAAI,IAAIA,IAAI,CAACC,MAAhC,CANpB,CADF;;AAUA,MAAMU,cAAc,GAAG,MACrB5B,MAAM,CACHS,UADH,CACc;AACVC,EAAAA,MAAM,EAAE,QADE;AAEVC,EAAAA,YAAY,EAAE,aAFJ;AAGVC,EAAAA,KAAK,EAAE;AAHG,CADd,EAMGC,IANH,CAMQC,QAAQ,IAAIA,QAAQ,CAACC,KAAT,CAAeC,GAAf,CAAmBC,IAAI,IAAIA,IAAI,CAACC,MAAhC,CANpB,CADF;;AASA,MAAMW,UAAU,GAAG,MACjB7B,MAAM,CACH8B,QADH,CACY,wBADZ,EACsC;AAAEpB,EAAAA,MAAM,EAAE;AAAV,CADtC,EAEGG,IAFH,CAEQC,QAAQ,IAAIA,QAAQ,CAACI,MAF7B,CADF;;AAKA,MAAMa,SAAS,GAAG,MAChB/B,MAAM,CACH8B,QADH,CACY,wBADZ,EACsC;AAAEpB,EAAAA,MAAM,EAAE;AAAV,CADtC,EAEGG,IAFH,CAEQC,QAAQ,IAAIA,QAAQ,CAACI,MAF7B,CADF;;AAKA,SACEV,iBADF,EAEEW,OAFF,EAGEC,OAHF,EAIEC,QAJF,EAKEM,WALF,EAMEC,cANF,EAOEC,UAPF,EAQEE,SARF","sourcesContent":["\n\nrequire('dotenv').config();\n\nconst client = require('contentful').createClient({\n  space: process.env.REACT_APP_CONTENTFUL_SPACE,\n  accessToken: process.env.REACT_APP_ACCESS_TOKEN,\n});\n\n\n\nconst getCertifications = () =>\n  client\n    .getEntries({\n      select: 'fields',\n      content_type: 'certifications',\n      order: 'fields.order',\n    })\n    .then(response => response.items.map(item => item.fields));\n\nconst getFaqs = () =>\n  client\n    .getEntries({\n      select: 'fields',\n      content_type: 'faq',\n      order: 'fields.order',\n    })\n    .then(response => response.items.map(item => item.fields));\n\nconst getPost = (order) =>\n  client\n    .getEntries({\n      select: 'fields',\n      content_type: 'press',\n      'fields.order': order,\n    })\n    .then(response => response.items.map(item => item.fields));\n\nconst getPosts = (skip, limit) =>\n  client\n    .getEntries({\n      select: 'fields',\n      content_type: 'press',\n      order: 'fields.order',\n      limit: limit,\n      skip: skip\n    })\n    .then(response => {\n      return {\n        data: response.items.map(item => item.fields),\n        count: response.total\n      }\n    });\n\nconst getProducts = () =>\n  client\n    .getEntries({\n      select: 'fields',\n      content_type: 'products',\n      order: 'fields.order',\n    })\n    .then(response => response.items.map(item => item.fields));\n\n\nconst getTestimonies = () =>\n  client\n    .getEntries({\n      select: 'fields',\n      content_type: 'testimonial',\n      order: 'fields.order',\n    })\n    .then(response => response.items.map(item => item.fields));\n\nconst getMetrics = () =>\n  client\n    .getEntry('12NMVRO3AuSzUO6fBLC8mq', { select: 'fields' })\n    .then(response => response.fields);\n\nconst getConfig = () =>\n  client\n    .getEntry('3uhsSThJqBMSCiTPf24Fra', { select: 'fields' })\n    .then(response => response.fields);\n\nexport {\n  getCertifications,\n  getFaqs,\n  getPost,\n  getPosts,\n  getProducts,\n  getTestimonies,\n  getMetrics,\n  getConfig,\n}"]},"metadata":{},"sourceType":"module"}