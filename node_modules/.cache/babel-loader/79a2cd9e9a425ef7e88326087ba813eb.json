{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/alisonfindlay/Documents/wellfield/src/components/Seamless/DeFi/DeFi.jsx\",\n    _s = $RefreshSig$();\n\nimport './DeFi.css';\nimport cryptoNet from '../../../lotties/seamless/crypto-net.json';\nimport lottie from 'lottie-web';\nimport { useRef, useState, useEffect } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nfunction DeFi() {\n  _s();\n\n  const [playAnimation, setPlayAnimation] = useState(false); // same as slideIn\n\n  const animationRef = useRef(null);\n  useLayoutEffect(() => {\n    const topPosition = slideRef.current.getBoundingClientRect().top;\n\n    const onScroll = () => {\n      const scrollPosition = window.scrollY + window.innerHeight;\n\n      if (topPosition < scrollPosition) {\n        setPlayAnimation(true);\n      }\n    };\n\n    window.addEventListener('scroll', onScroll);\n    return () => window.removeEventListener('scroll', onScroll);\n  }, []);\n  useEffect(() => {\n    if (playAnimation) {\n      lottie.loadAnimation({\n        container: document.querySelector(\"#crypto-net\"),\n        animationData: cryptoNet,\n        loop: false,\n        rendererSettings: {\n          preserveAspectRatio: 'xMidYMid slice'\n        }\n      });\n    }\n  }, [playAnimation]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sl-defi__bg\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          lg: 6,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"sl-defi__eyebrow heading5\",\n            children: \"Why We Built It\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"sl-defi__heading heading2\",\n            children: \"DeFi is not yet truly decentralized. We do for trading what Bitcoin did to money.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          lg: 6,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            ref: animationRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"crypto-net\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DeFi, \"0FUIBSCjJ8oHmtM+R3CNgAU7hsU=\");\n\n_c = DeFi;\nexport default DeFi;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeFi\");","map":{"version":3,"sources":["/Users/alisonfindlay/Documents/wellfield/src/components/Seamless/DeFi/DeFi.jsx"],"names":["cryptoNet","lottie","useRef","useState","useEffect","Container","Row","Col","DeFi","playAnimation","setPlayAnimation","animationRef","useLayoutEffect","topPosition","slideRef","current","getBoundingClientRect","top","onScroll","scrollPosition","window","scrollY","innerHeight","addEventListener","removeEventListener","loadAnimation","container","document","querySelector","animationData","loop","rendererSettings","preserveAspectRatio"],"mappings":";;;;;AAAA,OAAO,YAAP;AACA,OAAOA,SAAP,MAAsB,2CAAtB;AAEA,OAAOC,MAAP,MAAmB,YAAnB;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACd,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,KAAD,CAAlD,CADc,CAC6C;;AAC3D,QAAMQ,YAAY,GAAGT,MAAM,CAAC,IAAD,CAA3B;AAEAU,EAAAA,eAAe,CAAC,MAAM;AACpB,UAAMC,WAAW,GAAGC,QAAQ,CAACC,OAAT,CAAiBC,qBAAjB,GAAyCC,GAA7D;;AACA,UAAMC,QAAQ,GAAG,MAAM;AACrB,YAAMC,cAAc,GAAGC,MAAM,CAACC,OAAP,GAAiBD,MAAM,CAACE,WAA/C;;AACA,UAAIT,WAAW,GAAGM,cAAlB,EAAkC;AAChCT,QAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD;AACF,KALD;;AAMAU,IAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkCL,QAAlC;AACA,WAAO,MAAME,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqCN,QAArC,CAAb;AACD,GAVc,EAUZ,EAVY,CAAf;AAYAd,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIK,aAAJ,EAAmB;AACjBR,MAAAA,MAAM,CAACwB,aAAP,CAAqB;AACnBC,QAAAA,SAAS,EAAEC,QAAQ,CAACC,aAAT,CAAuB,aAAvB,CADQ;AAEnBC,QAAAA,aAAa,EAAE7B,SAFI;AAGnB8B,QAAAA,IAAI,EAAE,KAHa;AAInBC,QAAAA,gBAAgB,EAAE;AAAEC,UAAAA,mBAAmB,EAAE;AAAvB;AAJC,OAArB;AAMD;AACF,GATQ,EASN,CAACvB,aAAD,CATM,CAAT;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,2BACE,QAAC,SAAD;AAAA,6BACE,QAAC,GAAD;AAAA,gCACE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,EAAT;AAAa,UAAA,EAAE,EAAE,CAAjB;AAAA,kCACE;AAAM,YAAA,SAAS,EAAC,2BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAI,YAAA,SAAS,EAAC,2BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,EAAT;AAAa,UAAA,EAAE,EAAE,CAAjB;AAAA,kCACE;AAAK,YAAA,GAAG,EAAEE;AAAV;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GA3CQH,I;;KAAAA,I;AA6CT,eAAeA,IAAf","sourcesContent":["import './DeFi.css';\nimport cryptoNet from '../../../lotties/seamless/crypto-net.json';\n\nimport lottie from 'lottie-web';\nimport { useRef, useState, useEffect } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nfunction DeFi() {\n  const [playAnimation, setPlayAnimation] = useState(false); // same as slideIn\n  const animationRef = useRef(null);\n\n  useLayoutEffect(() => {\n    const topPosition = slideRef.current.getBoundingClientRect().top;\n    const onScroll = () => {\n      const scrollPosition = window.scrollY + window.innerHeight\n      if (topPosition < scrollPosition) {\n        setPlayAnimation(true);\n      }\n    }\n    window.addEventListener('scroll', onScroll)\n    return () => window.removeEventListener('scroll', onScroll)\n  }, []);\n\n  useEffect(() => {\n    if (playAnimation) {\n      lottie.loadAnimation({\n        container: document.querySelector(\"#crypto-net\"),\n        animationData: cryptoNet,\n        loop: false,\n        rendererSettings: { preserveAspectRatio: 'xMidYMid slice' }\n      });\n    }\n  }, [playAnimation]);\n\n  return (\n    <div className=\"sl-defi__bg\">\n      <Container>\n        <Row>\n          <Col xs={12} lg={6}>\n            <span className=\"sl-defi__eyebrow heading5\">Why We Built It</span>\n            <h2 className=\"sl-defi__heading heading2\">DeFi is not yet truly decentralized. We do for trading what Bitcoin did to money.</h2>\n          </Col>\n          <Col xs={12} lg={6}>\n            <div ref={animationRef}></div>\n            <div id=\"crypto-net\" />\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default DeFi;\n"]},"metadata":{},"sourceType":"module"}